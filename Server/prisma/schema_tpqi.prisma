generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/@prisma/client_tpqi"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL_TPQI")
}

model all_details {
  id_all_details  Int          @id @default(autoincrement())
  id_career_level Int
  id_d            Int
  career_level    career_level @relation(fields: [id_career_level], references: [id_career_level], onUpdate: Restrict, map: "fk_all_details_career_level")
  details         details      @relation(fields: [id_d], references: [id_d], onUpdate: Restrict, map: "fk_all_details_details")

  @@index([id_career_level], map: "fk_all_details_career_level")
  @@index([id_d], map: "fk_all_details_details")
}

model career {
  id_career         Int                 @id @default(autoincrement())
  name_career       String              @db.VarChar(255)
  career_level      career_level[]
  tpqi_summary_data tpqi_summary_data[]
}

model career_level {
  id_career_level   Int                 @id @default(autoincrement())
  id_career         Int
  id_level          Int
  all_details       all_details[]
  career            career              @relation(fields: [id_career], references: [id_career], onUpdate: Restrict, map: "fk_career_level_career")
  level             level               @relation(fields: [id_level], references: [id_level], onUpdate: Restrict, map: "fk_career_level_level")
  cl_knowledge      cl_knowledge[]
  cl_skills         cl_skills[]
  cl_uc             cl_uc[]
  tpqi_summary_data tpqi_summary_data[]

  @@index([id_career], map: "fk_career_level_career")
  @@index([id_level], map: "fk_career_level_level")
}

model cl_knowledge {
  id_cl_knowledge Int          @id @default(autoincrement())
  id_career_level Int
  id_knowledge    Int
  career_level    career_level @relation(fields: [id_career_level], references: [id_career_level], onUpdate: Restrict, map: "fk_cl_knowledge_career_level")
  knowledge       knowledge    @relation(fields: [id_knowledge], references: [id_knowledge], map: "fk_cl_knowledge_knowledge")

  @@index([id_career_level], map: "fk_cl_knowledge_career_level")
}

model cl_skills {
  id_cl_skills    Int          @id @default(autoincrement())
  id_career_level Int
  id_skill        Int
  career_level    career_level @relation(fields: [id_career_level], references: [id_career_level], onUpdate: Restrict, map: "fk_cl_skills_career_level")
  skill           skill        @relation(fields: [id_skill], references: [id_skill], onUpdate: Restrict, map: "fk_cl_skills_skill")

  @@index([id_career_level], map: "fk_cl_skills_career_level")
  @@index([id_skill], map: "fk_cl_skills_skill")
}

model cl_uc {
  id_cl_uc        Int          @id @default(autoincrement())
  id_career_level Int
  id_unit_code    Int
  career_level    career_level @relation(fields: [id_career_level], references: [id_career_level], onUpdate: Restrict, map: "fk_cl_uc_career_level")
  unit_code       unit_code    @relation(fields: [id_unit_code], references: [id_unit_code], onUpdate: Restrict, map: "fk_cl_uc_unit_code")

  @@index([id_career_level], map: "fk_cl_uc_career_level")
  @@index([id_unit_code], map: "fk_cl_uc_unit_code")
}

model details {
  id_d        Int           @id @default(autoincrement())
  outcomes    String        @db.VarChar(1200)
  all_details all_details[]
}

model knowledge {
  id_knowledge    Int               @id @default(autoincrement()) @db.UnsignedInt
  name_knowledge  String            @db.VarChar(255)
  users_knowledge users_knowledge[]
  u_knowledge     u_knowledge[]
  cl_knowledge    cl_knowledge[]
}

model level {
  id_level          Int                 @id @default(autoincrement())
  name_level        String              @db.VarChar(255)
  career_level      career_level[]
  tpqi_summary_data tpqi_summary_data[]
}

model occupational {
  id_occupational   Int                 @id @default(autoincrement())
  name_occupational String              @db.VarChar(255)
  unit_occupational unit_occupational[]
}

model sector {
  id_sector   Int           @id @default(autoincrement())
  name_sector String        @db.VarChar(255)
  unit_sector unit_sector[]
}

model skill {
  id_skill     Int            @id @default(autoincrement())
  name_skill   String         @db.VarChar(255)
  cl_skills    cl_skills[]
  u_skill      u_skill[]
  users_skills users_skills[]
}

model tpqi_summary_data {
  id                  Int          @id @default(autoincrement())
  user_email          String       @db.VarChar(255)
  career_id           Int
  level_id            Int
  id_career_level     Int
  skillPercentage     Decimal?     @db.Decimal(5, 2)
  knowledgePercentage Decimal?     @db.Decimal(5, 2)
  career              career       @relation(fields: [career_id], references: [id_career], onUpdate: Restrict, map: "fk_tpqi_summary_data_career")
  career_level        career_level @relation(fields: [id_career_level], references: [id_career_level], onUpdate: Restrict, map: "fk_tpqi_summary_data_career_level")
  level               level        @relation(fields: [level_id], references: [id_level], onUpdate: Restrict, map: "fk_tpqi_summary_data_level")

  @@unique([user_email, id_career_level], map: "uq_tpqi_summary")
  @@index([career_id], map: "fk_tpqi_summary_data_career")
  @@index([id_career_level], map: "fk_tpqi_summary_data_career_level")
  @@index([level_id], map: "fk_tpqi_summary_data_level")
}

model u_knowledge {
  id_u_knowledge Int       @id @default(autoincrement())
  id_unit_code   Int
  id_knowledge   Int       @db.UnsignedInt
  unit_code      unit_code @relation(fields: [id_unit_code], references: [id_unit_code], onUpdate: Restrict, map: "fk_u_knowledge_unit_code")
  knowledge      knowledge @relation(fields: [id_knowledge], references: [id_knowledge], map: "fk_u_knowledge_knowledge")
  @@index([id_unit_code], map: "fk_u_knowledge_unit_code")
}

model u_skill {
  id_u_skill   Int       @id @default(autoincrement())
  id_unit_code Int
  id_skill     Int
  skill        skill     @relation(fields: [id_skill], references: [id_skill], onUpdate: Restrict, map: "fk_u_skill_skill")
  unit_code    unit_code @relation(fields: [id_unit_code], references: [id_unit_code], onUpdate: Restrict, map: "fk_u_skill_unit_code")

  @@index([id_skill], map: "fk_u_skill_skill")
  @@index([id_unit_code], map: "fk_u_skill_unit_code")
}

model unit_code {
  id_unit_code         Int                 @id @default(autoincrement())
  unit_code            String              @db.VarChar(255)
  name                 String              @db.VarChar(255)
  description_unitcode String              @db.VarChar(255)
  cl_uc                cl_uc[]
  u_knowledge          u_knowledge[]
  u_skill              u_skill[]
  unit_occupational    unit_occupational[]
  unit_sector          unit_sector[]
}

model unit_occupational {
  id_unit_occupational Int          @id @default(autoincrement())
  id_unit_code         Int
  id_occupational      Int
  occupational         occupational @relation(fields: [id_occupational], references: [id_occupational], onUpdate: Restrict, map: "fk_unit_occupational_occupational")
  unit_code            unit_code    @relation(fields: [id_unit_code], references: [id_unit_code], onUpdate: Restrict, map: "fk_unit_occupational_unit_code")

  @@index([id_occupational], map: "fk_unit_occupational_occupational")
  @@index([id_unit_code], map: "fk_unit_occupational_unit_code")
}

model unit_sector {
  id_unit_sector Int       @id @default(autoincrement())
  id_unit_code   Int
  id_sector      Int
  sector         sector    @relation(fields: [id_sector], references: [id_sector], onUpdate: Restrict, map: "fk_unit_sector_sector")
  unit_code      unit_code @relation(fields: [id_unit_code], references: [id_unit_code], onUpdate: Restrict, map: "fk_unit_sector_unit_code")

  @@index([id_sector], map: "fk_unit_sector_sector")
  @@index([id_unit_code], map: "fk_unit_sector_unit_code")
}

model users_knowledge {
  id_users_knowledge Int                             @id @default(autoincrement())
  id_knowledge       Int                             @db.UnsignedInt
  link_knowledge     String                          @db.VarChar(500)
  email              String                          @db.VarChar(255)
  approval_status    users_knowledge_approval_status @default(not_approved)
  knowledge          knowledge                       @relation(fields: [id_knowledge], references: [id_knowledge], onDelete: Cascade, map: "fk_users_knowledge_knowledge") // <-- CORRECTED LINE

  @@index([id_knowledge], map: "fk_u_knowledge_knowledge") // You might want to rename this index too for consistency, but it's not required for the fix.
}

model users_skills {
  id_users_skills Int                          @id @default(autoincrement())
  id_skill        Int
  link_skill      String                       @db.VarChar(500)
  email           String                       @db.VarChar(255)
  approval_status users_skills_approval_status @default(not_approved)
  skill           skill                        @relation(fields: [id_skill], references: [id_skill], onDelete: Cascade, map: "fk_users_skills_skill")

  @@index([id_skill], map: "fk_users_skills_skill")
}

enum users_skills_approval_status {
  approved
  not_approved
}

enum users_knowledge_approval_status {
  approved
  not_approved
}
